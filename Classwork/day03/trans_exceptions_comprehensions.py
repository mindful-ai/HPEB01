Python 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 22:22:05) [MSC v.1916 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> import ipconfig
Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    import ipconfig
ModuleNotFoundError: No module named 'ipconfig'
>>> import os
>>> os.chdir(r"C:\Users\Purushotham\Desktop\Clients\HPE\B01\day03")
>>> import ipconfig
>>> ipconfig.extractPhyIP()
['   Physical Address. . . . . . . . . : 8C-16-45-D7-2F-BE', '   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-51', '   Physical Address. . . . . . . . . : B2-FC-36-B3-D3-51', '   Physical Address. . . . . . . . . : 00-50-56-C0-00-01', '   Physical Address. . . . . . . . . : 00-50-56-C0-00-08', '   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-51', '   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-52']
>>> for line in ipconfig.extractPhyIP():
	print(line)

	
   Physical Address. . . . . . . . . : 8C-16-45-D7-2F-BE
   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-51
   Physical Address. . . . . . . . . : B2-FC-36-B3-D3-51
   Physical Address. . . . . . . . . : 00-50-56-C0-00-01
   Physical Address. . . . . . . . . : 00-50-56-C0-00-08
   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-51
   Physical Address. . . . . . . . . : B0-FC-36-B3-D3-52
>>> 
= RESTART: C:/Users/Purushotham/Desktop/Clients/HPE/B01/day03/exceptions.py =
import subprocess

def extractPhyIP():
    phy = []
    content = subprocess.check_output('ipconfig -all')
    content = str(content)
    content = content.split("\\r\\n")
    for line in content:
        if("Physical Address" in line):
            phy.append(line)

    return phy

Operation completed!!
>>> 
= RESTART: C:/Users/Purushotham/Desktop/Clients/HPE/B01/day03/exceptions.py =
File not found
Operation completed!!
>>> 
= RESTART: C:/Users/Purushotham/Desktop/Clients/HPE/B01/day03/exceptions.py =
File not found
[Errno 2] No such file or directory: 'C:\\Users\\Purushotham\\Desktop\\Clients\\HPE\\B01\\day03\\ipconfig2.py'
Operation completed!!
>>> ####################################################################
>>> L = []
>>> for i in range(100):
	if(i % 3 == 0):
		L.append(i)

		
>>> L
[0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99]
>>> LC = [x for x in range(100) if not i%3]
>>> LC
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]
>>> LC = [x for x in range(100) if i%3]
>>> LC
[]
>>> LC = [x for x in range(100) if not x%3]
>>> LC
[0, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99]
>>> # Div bby 5 and 6
>>> LC = [x for x in range(100, 200) if (x % 5 == 0 and x % 6 == 0)]
>>> LC
[120, 150, 180]
>>> G = range(10,99)
>>> list(G)
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98]
>>> def func(n):
	s = str(n)
	return int(s[1]) + int(s[0])

>>> LC = [func(x) for x in G]
>>> LC
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 9, 10, 11, 12, 13, 14, 15, 16, 17]
>>> LC = [(x, x**2, x**3) for x in range(1, 11)]
>>> LC
[(1, 1, 1), (2, 4, 8), (3, 9, 27), (4, 16, 64), (5, 25, 125), (6, 36, 216), (7, 49, 343), (8, 64, 512), (9, 81, 729), (10, 100, 1000)]
>>> G = [1,2,3,4,5]
>>> LC = [x**2 for x in G]
>>> LC
[1, 4, 9, 16, 25]
>>> LC = [x**2 for x in G if x==3]
>>> LC
[9]
>>> LC = [x**2 if x == 3 else x for x in G]
>>> LC
[1, 2, 9, 4, 5]
>>> LC = [(x,y) for x in range(1, 11) for y in range(100, 200) if y % x == 0]
>>> LC
[(1, 100), (1, 101), (1, 102), (1, 103), (1, 104), (1, 105), (1, 106), (1, 107), (1, 108), (1, 109), (1, 110), (1, 111), (1, 112), (1, 113), (1, 114), (1, 115), (1, 116), (1, 117), (1, 118), (1, 119), (1, 120), (1, 121), (1, 122), (1, 123), (1, 124), (1, 125), (1, 126), (1, 127), (1, 128), (1, 129), (1, 130), (1, 131), (1, 132), (1, 133), (1, 134), (1, 135), (1, 136), (1, 137), (1, 138), (1, 139), (1, 140), (1, 141), (1, 142), (1, 143), (1, 144), (1, 145), (1, 146), (1, 147), (1, 148), (1, 149), (1, 150), (1, 151), (1, 152), (1, 153), (1, 154), (1, 155), (1, 156), (1, 157), (1, 158), (1, 159), (1, 160), (1, 161), (1, 162), (1, 163), (1, 164), (1, 165), (1, 166), (1, 167), (1, 168), (1, 169), (1, 170), (1, 171), (1, 172), (1, 173), (1, 174), (1, 175), (1, 176), (1, 177), (1, 178), (1, 179), (1, 180), (1, 181), (1, 182), (1, 183), (1, 184), (1, 185), (1, 186), (1, 187), (1, 188), (1, 189), (1, 190), (1, 191), (1, 192), (1, 193), (1, 194), (1, 195), (1, 196), (1, 197), (1, 198), (1, 199), (2, 100), (2, 102), (2, 104), (2, 106), (2, 108), (2, 110), (2, 112), (2, 114), (2, 116), (2, 118), (2, 120), (2, 122), (2, 124), (2, 126), (2, 128), (2, 130), (2, 132), (2, 134), (2, 136), (2, 138), (2, 140), (2, 142), (2, 144), (2, 146), (2, 148), (2, 150), (2, 152), (2, 154), (2, 156), (2, 158), (2, 160), (2, 162), (2, 164), (2, 166), (2, 168), (2, 170), (2, 172), (2, 174), (2, 176), (2, 178), (2, 180), (2, 182), (2, 184), (2, 186), (2, 188), (2, 190), (2, 192), (2, 194), (2, 196), (2, 198), (3, 102), (3, 105), (3, 108), (3, 111), (3, 114), (3, 117), (3, 120), (3, 123), (3, 126), (3, 129), (3, 132), (3, 135), (3, 138), (3, 141), (3, 144), (3, 147), (3, 150), (3, 153), (3, 156), (3, 159), (3, 162), (3, 165), (3, 168), (3, 171), (3, 174), (3, 177), (3, 180), (3, 183), (3, 186), (3, 189), (3, 192), (3, 195), (3, 198), (4, 100), (4, 104), (4, 108), (4, 112), (4, 116), (4, 120), (4, 124), (4, 128), (4, 132), (4, 136), (4, 140), (4, 144), (4, 148), (4, 152), (4, 156), (4, 160), (4, 164), (4, 168), (4, 172), (4, 176), (4, 180), (4, 184), (4, 188), (4, 192), (4, 196), (5, 100), (5, 105), (5, 110), (5, 115), (5, 120), (5, 125), (5, 130), (5, 135), (5, 140), (5, 145), (5, 150), (5, 155), (5, 160), (5, 165), (5, 170), (5, 175), (5, 180), (5, 185), (5, 190), (5, 195), (6, 102), (6, 108), (6, 114), (6, 120), (6, 126), (6, 132), (6, 138), (6, 144), (6, 150), (6, 156), (6, 162), (6, 168), (6, 174), (6, 180), (6, 186), (6, 192), (6, 198), (7, 105), (7, 112), (7, 119), (7, 126), (7, 133), (7, 140), (7, 147), (7, 154), (7, 161), (7, 168), (7, 175), (7, 182), (7, 189), (7, 196), (8, 104), (8, 112), (8, 120), (8, 128), (8, 136), (8, 144), (8, 152), (8, 160), (8, 168), (8, 176), (8, 184), (8, 192), (9, 108), (9, 117), (9, 126), (9, 135), (9, 144), (9, 153), (9, 162), (9, 171), (9, 180), (9, 189), (9, 198), (10, 100), (10, 110), (10, 120), (10, 130), (10, 140), (10, 150), (10, 160), (10, 170), (10, 180), (10, 190)]
>>> L = ['computer', 'strategy', 'project', 'comprehension', 'break', 'confused', 'water', 'sandwich', 'bonus']
>>> DC = {key:len(key) for key in L}
>>> DC
{'computer': 8, 'strategy': 8, 'project': 7, 'comprehension': 13, 'break': 5, 'confused': 8, 'water': 5, 'sandwich': 8, 'bonus': 5}
>>> DC = {key:{'a':key.count('a'), 'e':key.count('e'), 'i':key.count('i'), 'o':key.count('o'), 'u':key.count('u')} for key in L}
>>> DC
{'computer': {'a': 0, 'e': 1, 'i': 0, 'o': 1, 'u': 1}, 'strategy': {'a': 1, 'e': 1, 'i': 0, 'o': 0, 'u': 0}, 'project': {'a': 0, 'e': 1, 'i': 0, 'o': 1, 'u': 0}, 'comprehension': {'a': 0, 'e': 2, 'i': 1, 'o': 2, 'u': 0}, 'break': {'a': 1, 'e': 1, 'i': 0, 'o': 0, 'u': 0}, 'confused': {'a': 0, 'e': 1, 'i': 0, 'o': 1, 'u': 1}, 'water': {'a': 1, 'e': 1, 'i': 0, 'o': 0, 'u': 0}, 'sandwich': {'a': 1, 'e': 0, 'i': 1, 'o': 0, 'u': 0}, 'bonus': {'a': 0, 'e': 0, 'i': 0, 'o': 1, 'u': 1}}
>>> 
